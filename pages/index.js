import { getSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { usePalette } from "react-palette";
import Nav from "../components/Nav";
import RecentlyPlayed from "../components/RecentlyPlayed";
import TopArtists from "../components/TopArtists";
import TopGenres from "../components/TopGenres";
import TopTracks from "../components/TopTracks";
import useSpotify from "../hooks/useSpotify";

export default function Home({ session }) {
  const [topTracks, setTopTracks] = useState([]);

  const { data, loading, error } = usePalette(
    topTracks[0]?.album?.images[0].url
  );
  const spotifyApi = useSpotify();

  useEffect(() => {
    if (spotifyApi.getAccessToken()) {
      spotifyApi
        .getMyTopTracks({
          limit: 1,
        })
        .then(
          function (data) {
            console.log("top tracks are ", data.body.items);
            setTopTracks(data.body.items);
          },
          function (err) {
            console.log("Something went wrong!", err);
          }
        );
    }
  }, [spotifyApi]);

  return (
    <main className="flex min-h-screen justify-between flex-col relative bg-black/70">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Nav />
      <section className="p-6">
        <div className="wrapper mx-auto grid grid-cols-4 gap-8">
          <TopTracks session={session} />
          <TopArtists session={session} />
          <TopGenres session={session} />
          <RecentlyPlayed session={session} />
        </div>
      </section>

      <footer className="opacity-20 p-8 text-sm font-light text-left">
        <div className="wrapper">
          <p>Â© 2021 Spotify AB</p>
        </div>
      </footer>

      <div
        className="absolute inset-0 w-full h-full transition-all duration-300 backdrop-animation"
        style={{
          zIndex: -1,
          background: `linear-gradient(to bottom right,  ${data.darkMuted} 40%, #000 100%)`,
        }}
      />
    </main>
  );
}

export async function getServerSideProps(context) {
  const session = await getSession(context);

  return {
    props: {
      session,
    },
  };
}
